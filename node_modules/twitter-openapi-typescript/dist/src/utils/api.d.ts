import * as i from 'twitter-openapi-typescript-generated';
import { TweetApiUtilsData, UserApiUtilsData, CursorApiUtilsResponse, ApiUtilsHeader } from '../models';
export declare const getKwargs: (flag: {
    [key: string]: any;
}, additional: {
    [key: string]: any;
}) => any;
export declare const errorCheck: <T>(data: i.Errors | T) => T;
export declare const instructionToEntry: (item: i.InstructionUnion[]) => i.TimelineAddEntry[];
export declare const tweetEntriesConverter: (item: i.TimelineAddEntry[]) => TweetApiUtilsData[];
type buildTweetApiUtilsArgs = {
    result: i.ItemResult;
    promotedMetadata?: any;
    reply?: i.TimelineTweet[];
};
export declare const buildTweetApiUtils: (args: buildTweetApiUtilsArgs) => TweetApiUtilsData | undefined;
export declare const tweetResultsConverter: (tweetResults: i.ItemResult) => i.Tweet | undefined;
export declare const userOrNullConverter: (userResults: i.UserUnion) => i.User | undefined;
export declare const userEntriesConverter: (item: i.TimelineAddEntry[]) => i.UserResults[];
export declare const userResultConverter: (user: i.UserResults[]) => UserApiUtilsData[];
export declare const entriesCursor: (item: i.TimelineAddEntry[]) => CursorApiUtilsResponse;
export declare const buildCursor: (cursorList: i.TimelineTimelineCursor[]) => CursorApiUtilsResponse;
export declare const buildHeader: (headers: Headers) => ApiUtilsHeader;
export {};
//# sourceMappingURL=api.d.ts.map