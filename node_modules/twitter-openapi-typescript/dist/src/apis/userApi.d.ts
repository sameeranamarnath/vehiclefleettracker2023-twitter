import * as i from 'twitter-openapi-typescript-generated';
import { RequestParam, DefaultFlag, UserApiUtilsData, TwitterApiUtilsResponse } from '../models';
type getUserByScreenNameParam = {
    screenName: string;
    extraParam?: {
        [key: string]: any;
    };
};
type getUserByRestIdParam = {
    userId: string;
    extraParam?: {
        [key: string]: any;
    };
};
type ResponseType = TwitterApiUtilsResponse<UserApiUtilsData>;
export declare class UserApiUtils {
    api: i.UserApi;
    flag: DefaultFlag;
    constructor(api: i.UserApi, flag: DefaultFlag);
    request<T>(param: RequestParam<i.UserResults, T>): Promise<ResponseType>;
    getUserByScreenName(param: getUserByScreenNameParam): Promise<ResponseType>;
    getUserByRestId(param: getUserByRestIdParam): Promise<ResponseType>;
}
export {};
//# sourceMappingURL=userApi.d.ts.map