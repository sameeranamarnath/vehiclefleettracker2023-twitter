import * as i from 'twitter-openapi-typescript-generated';
import { DefaultFlag } from '../models';
import { TwitterApiUtilsResponse } from '../models';
type PostCreateTweetParam = {
    tweetText: string;
    mediaIds?: string[];
    inReplyToTweetId?: string;
    extraParam?: {
        [key: string]: any;
    };
};
type PostDeleteTweetParam = {
    tweetId: string;
    extraParam?: {
        [key: string]: any;
    };
};
type PostCreateRetweetParam = {
    tweetId: string;
    extraParam?: {
        [key: string]: any;
    };
};
type PostDeleteRetweetParam = {
    sourceTweetId: string;
    extraParam?: {
        [key: string]: any;
    };
};
type PostFavoriteTweetParam = {
    tweetId: string;
    extraParam?: {
        [key: string]: any;
    };
};
type PostUnfavoriteTweetParam = {
    tweetId: string;
    extraParam?: {
        [key: string]: any;
    };
};
export declare class PostApiUtils {
    api: i.PostApi;
    flag: DefaultFlag;
    constructor(api: i.PostApi, flag: DefaultFlag);
    postCreateTweet(param: PostCreateTweetParam): Promise<TwitterApiUtilsResponse<i.CreateTweetResponse>>;
    postDeleteTweet(param: PostDeleteTweetParam): Promise<TwitterApiUtilsResponse<i.DeleteTweetResponse>>;
    postCreateRetweet(param: PostCreateRetweetParam): Promise<TwitterApiUtilsResponse<i.CreateRetweetResponse>>;
    postDeleteRetweet(param: PostDeleteRetweetParam): Promise<TwitterApiUtilsResponse<i.DeleteRetweetResponse>>;
    postFavoriteTweet(param: PostFavoriteTweetParam): Promise<TwitterApiUtilsResponse<i.FavoriteTweetResponseData>>;
    postUnfavoriteTweet(param: PostUnfavoriteTweetParam): Promise<TwitterApiUtilsResponse<i.UnfavoriteTweetResponseData>>;
}
export {};
//# sourceMappingURL=postApi.d.ts.map