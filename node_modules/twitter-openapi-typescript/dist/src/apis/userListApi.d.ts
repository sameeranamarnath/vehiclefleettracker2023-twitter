import * as i from 'twitter-openapi-typescript-generated';
import { RequestParam, DefaultFlag, TimelineApiUtilsResponse, TwitterApiUtilsResponse, UserApiUtilsData } from '../models';
type GetFollowersParam = {
    userId: string;
    cursor?: string;
    count?: number;
    extraParam?: {
        [key: string]: any;
    };
};
type GetFollowingParam = {
    userId: string;
    cursor?: string;
    count?: number;
    extraParam?: {
        [key: string]: any;
    };
};
type GetFollowersYouKnowParam = {
    userId: string;
    cursor?: string;
    count?: number;
    extraParam?: {
        [key: string]: any;
    };
};
type GetFavoritersParam = {
    tweetId: string;
    cursor?: string;
    count?: number;
    extraParam?: {
        [key: string]: any;
    };
};
type GetRetweetersParam = {
    tweetId: string;
    cursor?: string;
    count?: number;
    extraParam?: {
        [key: string]: any;
    };
};
type ResponseType = TwitterApiUtilsResponse<TimelineApiUtilsResponse<UserApiUtilsData>>;
export declare class UserListApiUtils {
    api: i.UserListApi;
    flag: DefaultFlag;
    constructor(api: i.UserListApi, flag: DefaultFlag);
    request<T>(param: RequestParam<i.InstructionUnion[], T>): Promise<ResponseType>;
    getFollowers(param: GetFollowersParam): Promise<ResponseType>;
    getFollowing(param: GetFollowingParam): Promise<ResponseType>;
    getFollowersYouKnow(param: GetFollowersYouKnowParam): Promise<ResponseType>;
    getFavoriters(param: GetFavoritersParam): Promise<ResponseType>;
    getRetweeters(param: GetRetweetersParam): Promise<ResponseType>;
}
export {};
//# sourceMappingURL=userListApi.d.ts.map