/**
 * ロガーラッパークラス
 */
export declare class Logger {
    private readonly logger;
    private constructor();
    /**
     * デバッグログを出力する
     *
     * @param message メッセージ
     * @param metadata メタデータ
     */
    debug(message: string, metadata?: Record<string, unknown>): void;
    /**
     * 情報ログを出力する
     *
     * @param message メッセージ
     * @param metadata メタデータ
     */
    info(message: string, metadata?: Record<string, unknown>): void;
    /**
     * 警告ログを出力する
     *
     * @param message メッセージ
     * @param error エラー
     */
    warn(message: string, error?: Error): void;
    /**
     * エラーログを出力する
     *
     * @param message メッセージ
     * @param error エラー
     */
    error(message: string, error?: Error): void;
    /**
     * ロガーを初期化・設定する
     *
     * 環境変数で以下の設定が可能
     * - LOG_LEVEL: ログレベル (デフォルト info)
     * - LOG_FILE_LEVEL: ファイル出力のログレベル (デフォルト info)
     * - LOG_DIR: ログ出力先 (デフォルト logs)
     * - LOG_FILE_MAX_AGE: ログファイルの最大保存期間 (デフォルト 30d)
     * - LOG_FILE_FORMAT: ログファイルのフォーマット (デフォルト text)
     *
     * @param category カテゴリ
     * @returns ロガー
     */
    static configure(category: string): Logger;
}
//# sourceMappingURL=logger.d.ts.map