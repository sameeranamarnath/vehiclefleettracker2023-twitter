"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const node_utils_1 = require("@book000/node-utils");
const twitter_1 = require("./twitter");
/**
 * メイン処理
 */
async function main() {
    const username = process.env.TWITTER_USERNAME;
    const password = process.env.TWITTER_PASSWORD;
    const otpSecret = process.env.TWITTER_OTP_SECRET;
    if (!username || !password || !otpSecret) {
        throw new Error('Failed to get environment variables.');
    }
    const twitter = await twitter_1.Twitter.login({
        username,
        password,
        otpSecret,
        puppeteerOptions: {
            userDataDirectory: './data/userdata',
        },
        debugOptions: {
            outputResponse: {
                enable: true,
                outputDirectory: './data/responses',
                onResponse: (details) => {
                    const logger = node_utils_1.Logger.configure('save-responses');
                    logger.info(`[${details.type}] ${details.method} ${details.name}`);
                },
            },
        },
    });
    process.on('SIGINT', async () => {
        await twitter.close();
        process.exit();
    });
}
;
(async () => {
    const logger = node_utils_1.Logger.configure('save-responses');
    try {
        await main();
    }
    catch (error) {
        logger.error('Error occurred', error);
    }
})();
//# sourceMappingURL=save-responses.js.map