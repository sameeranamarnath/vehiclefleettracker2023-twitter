import { Result } from './utils';
/**
 * カスタム型定義を生成するクラス
 */
export declare class CustomTypesGenerator {
    private readonly results;
    private readonly schemaDirectory;
    private readonly typesDirectory;
    /**
     * @param results エンドポイントごとのレスポンス情報
     * @param schemaDirectory スキーマ保存ディレクトリ
     * @param typesDirectory 型定義保存ディレクトリ
     */
    constructor(results: Result[], schemaDirectory: string, typesDirectory: string);
    /**
     * 検索タイムラインツイートモデル（CustomSearchTimelineEntry）のカスタム型定義を生成する
     */
    private runGraphQLSearchTimeline;
    /**
     * ユーザーツイートモデル（CustomUserTweetEntry）のカスタム型定義を生成する
     */
    private runGraphQLUserTweets;
    /**
     * ユーザーいいねツイートモデル（CustomUserLikeTweetEntry）のカスタム型定義を生成する
     */
    private runGraphQLUserLikeTweets;
    /**
     * GET・POSTメソッド共通のホームタイムラインモデルのカスタム型定義を生成する
     */
    private runGraphQLTimeline;
    /**
     * タイムラインツイートモデル（CustomTimelineTweetEntry）のカスタム型定義を生成する
     */
    private runGraphQLTimelineTweetEntry;
    /**
     * レスポンスツイートオブジェクト（CustomTweetObject）のカスタム型定義を生成する
     */
    private runTweetObject;
    /**
     * レスポンスツイートレガシーオブジェクト（CustomTweetLegacyObject）のカスタム型定義を生成する
     */
    private runTweetLegacyObject;
    /**
     * レスポンスユーザーレガシーオブジェクト（CustomUserLegacyObject）のカスタム型定義を生成する
     */
    private runUserLegacyObject;
    /**
     * カスタム型定義を、スキーマを元に生成する
     *
     * @param schema スキーマ
     * @param name 型名
     * @param tsDocument 型定義の tsdoc（1 行で記述）
     */
    private generateTypeFromSchema;
    /**
     * カスタム型定義を生成する
     */
    generate(parallel: boolean): Promise<void>;
}
//# sourceMappingURL=custom-types-generator.d.ts.map