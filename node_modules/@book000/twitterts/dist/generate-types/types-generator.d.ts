import { Result } from './utils';
/**
 * 複数型定義生成オプション（TwitterGenerateTypes.generateTypes）
 */
interface GenerateTypesOptions {
    /**
     * 保存先ディレクトリパス設定
     */
    directory: {
        /**
         * スキーマファイルのディレクトリパス
         */
        schema: string;
        /**
         * 型定義ファイルのディレクトリパス
         */
        types: string;
    };
    /** 並列処理をするかどうか */
    parallel: boolean;
}
/**
 * 型定義生成クラス
 */
export declare class TwitterTypesGenerator {
    /**
     * エンドポイントごとのレスポンス群
     */
    private readonly results;
    /**
     * @param options 型定義生成クラスのオプション
     */
    constructor(results: Result[]);
    /**
     * エンドポイントの型定義を生成する
     *
     * @param options 単一の型定義生成オプション
     * @param result エンドポイントごとのレスポンス情報
     */
    private generateType;
    /**
     * 保存されたデバッグレスポンスを元に、全てのエンドポイントの型定義を生成する。
     *
     * @param options 型定義生成オプション
     */
    generateTypes(options: GenerateTypesOptions): Promise<void>;
}
export {};
//# sourceMappingURL=types-generator.d.ts.map