import { Coordinates, Entities, ExtendedEntities, FullUser, Place, Status, UserEntities } from 'twitter-d';
import { CustomTweetLegacyObject } from './models/responses/custom/custom-tweet-legacy-object';
import { CustomTweetObject } from './models/responses/custom/custom-tweet-object';
import { CustomUserLegacyObject } from './models/responses/custom/custom-user-legacy-object';
import { GraphQLGetUserByScreenNameSuccessResponse } from './models/responses/graphql/get/user-by-screen-name-success';
/**
 * オブジェクトを変換するクラス
 */
export declare const ObjectConverter: {
    /**
     * ツイートのレガシーオブジェクトからエンティティを変換する
     *
     * @param legacy ツイートのレガシーオブジェクト
     * @returns エンティティ
     */
    convertTweetEntities(legacy: CustomTweetLegacyObject): Entities;
    /**
     * ツイートのレガシーオブジェクトから拡張エンティティを変換する
     *
     * @param legacy ツイートのレガシーオブジェクト
     * @returns 拡張エンティティ
     */
    convertExtendedEntities(legacy: CustomTweetLegacyObject): ExtendedEntities;
    /**
     * ユーザーのレガシーオブジェクトからユーザーエンティティを変換する
     *
     * @param legacy ユーザーのレガシーオブジェクト
     * @returns ユーザーエンティティ
     */
    convertUserEntities(legacy: CustomUserLegacyObject): UserEntities;
    /**
     * ツイートのレガシーオブジェクトから座標を変換する
     *
     * @param legacy ツイートのレガシーオブジェクト
     * @returns 座標
     */
    convertCoordinates(legacy: CustomTweetLegacyObject): Coordinates | undefined;
    /**
     * ツイートのレガシーオブジェクトから場所を変換する
     *
     * @param legacy ツイートのレガシーオブジェクト
     * @returns 場所
     */
    convertPlace(legacy: CustomTweetLegacyObject): Place | undefined;
    /**
     * GraphQLのレスポンスにあるツイートオブジェクトをStatusに変換する。
     *
     * @param tweet ツイートオブジェクト
     * @returns Status
     */
    convertToStatus(tweet: CustomTweetObject): Status;
    /**
     * GraphQLのレスポンスにあるユーザーオブジェクトをFullUserに変換する。
     *
     * @param response GraphQLのレスポンス
     * @returns FullUser
     */
    convertToFullUser(response: GraphQLGetUserByScreenNameSuccessResponse): FullUser;
};
//# sourceMappingURL=converter.d.ts.map