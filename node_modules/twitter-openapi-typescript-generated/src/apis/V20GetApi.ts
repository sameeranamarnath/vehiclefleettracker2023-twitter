/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface GetSearchAdaptiveRequest {
    includeProfileInterstitialType: number;
    includeBlocking: number;
    includeBlockedBy: number;
    includeFollowedBy: number;
    includeWantRetweets: number;
    includeMuteEdge: number;
    includeCanDm: number;
    includeCanMediaTag: number;
    includeExtHasNftAvatar: number;
    includeExtIsBlueVerified: number;
    includeExtVerifiedType: number;
    includeExtProfileImageShape: number;
    skipStatus: number;
    cardsPlatform: string;
    includeCards: number;
    includeExtAltText: boolean;
    includeExtLimitedActionResults: boolean;
    includeQuoteCount: boolean;
    includeReplyCount: number;
    tweetMode: string;
    includeExtViews: boolean;
    includeEntities: boolean;
    includeUserEntities: boolean;
    includeExtMediaColor: boolean;
    includeExtMediaAvailability: boolean;
    includeExtSensitiveMediaWarning: boolean;
    includeExtTrustedFriendsMetadata: boolean;
    sendErrorCodes: boolean;
    simpleQuotedTweet: boolean;
    q: string;
    querySource: string;
    count: number;
    requestContext: string;
    pc: number;
    spellingCorrections: number;
    includeExtEditControl: boolean;
    ext: string;
}

/**
 * 
 */
export class V20GetApi extends runtime.BaseAPI {

    /**
     * get search adaptive
     */
    async getSearchAdaptiveRaw(requestParameters: GetSearchAdaptiveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.includeProfileInterstitialType === null || requestParameters.includeProfileInterstitialType === undefined) {
            throw new runtime.RequiredError('includeProfileInterstitialType','Required parameter requestParameters.includeProfileInterstitialType was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeBlocking === null || requestParameters.includeBlocking === undefined) {
            throw new runtime.RequiredError('includeBlocking','Required parameter requestParameters.includeBlocking was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeBlockedBy === null || requestParameters.includeBlockedBy === undefined) {
            throw new runtime.RequiredError('includeBlockedBy','Required parameter requestParameters.includeBlockedBy was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeFollowedBy === null || requestParameters.includeFollowedBy === undefined) {
            throw new runtime.RequiredError('includeFollowedBy','Required parameter requestParameters.includeFollowedBy was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeWantRetweets === null || requestParameters.includeWantRetweets === undefined) {
            throw new runtime.RequiredError('includeWantRetweets','Required parameter requestParameters.includeWantRetweets was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeMuteEdge === null || requestParameters.includeMuteEdge === undefined) {
            throw new runtime.RequiredError('includeMuteEdge','Required parameter requestParameters.includeMuteEdge was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeCanDm === null || requestParameters.includeCanDm === undefined) {
            throw new runtime.RequiredError('includeCanDm','Required parameter requestParameters.includeCanDm was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeCanMediaTag === null || requestParameters.includeCanMediaTag === undefined) {
            throw new runtime.RequiredError('includeCanMediaTag','Required parameter requestParameters.includeCanMediaTag was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeExtHasNftAvatar === null || requestParameters.includeExtHasNftAvatar === undefined) {
            throw new runtime.RequiredError('includeExtHasNftAvatar','Required parameter requestParameters.includeExtHasNftAvatar was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeExtIsBlueVerified === null || requestParameters.includeExtIsBlueVerified === undefined) {
            throw new runtime.RequiredError('includeExtIsBlueVerified','Required parameter requestParameters.includeExtIsBlueVerified was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeExtVerifiedType === null || requestParameters.includeExtVerifiedType === undefined) {
            throw new runtime.RequiredError('includeExtVerifiedType','Required parameter requestParameters.includeExtVerifiedType was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeExtProfileImageShape === null || requestParameters.includeExtProfileImageShape === undefined) {
            throw new runtime.RequiredError('includeExtProfileImageShape','Required parameter requestParameters.includeExtProfileImageShape was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.skipStatus === null || requestParameters.skipStatus === undefined) {
            throw new runtime.RequiredError('skipStatus','Required parameter requestParameters.skipStatus was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.cardsPlatform === null || requestParameters.cardsPlatform === undefined) {
            throw new runtime.RequiredError('cardsPlatform','Required parameter requestParameters.cardsPlatform was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeCards === null || requestParameters.includeCards === undefined) {
            throw new runtime.RequiredError('includeCards','Required parameter requestParameters.includeCards was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeExtAltText === null || requestParameters.includeExtAltText === undefined) {
            throw new runtime.RequiredError('includeExtAltText','Required parameter requestParameters.includeExtAltText was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeExtLimitedActionResults === null || requestParameters.includeExtLimitedActionResults === undefined) {
            throw new runtime.RequiredError('includeExtLimitedActionResults','Required parameter requestParameters.includeExtLimitedActionResults was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeQuoteCount === null || requestParameters.includeQuoteCount === undefined) {
            throw new runtime.RequiredError('includeQuoteCount','Required parameter requestParameters.includeQuoteCount was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeReplyCount === null || requestParameters.includeReplyCount === undefined) {
            throw new runtime.RequiredError('includeReplyCount','Required parameter requestParameters.includeReplyCount was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.tweetMode === null || requestParameters.tweetMode === undefined) {
            throw new runtime.RequiredError('tweetMode','Required parameter requestParameters.tweetMode was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeExtViews === null || requestParameters.includeExtViews === undefined) {
            throw new runtime.RequiredError('includeExtViews','Required parameter requestParameters.includeExtViews was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeEntities === null || requestParameters.includeEntities === undefined) {
            throw new runtime.RequiredError('includeEntities','Required parameter requestParameters.includeEntities was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeUserEntities === null || requestParameters.includeUserEntities === undefined) {
            throw new runtime.RequiredError('includeUserEntities','Required parameter requestParameters.includeUserEntities was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeExtMediaColor === null || requestParameters.includeExtMediaColor === undefined) {
            throw new runtime.RequiredError('includeExtMediaColor','Required parameter requestParameters.includeExtMediaColor was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeExtMediaAvailability === null || requestParameters.includeExtMediaAvailability === undefined) {
            throw new runtime.RequiredError('includeExtMediaAvailability','Required parameter requestParameters.includeExtMediaAvailability was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeExtSensitiveMediaWarning === null || requestParameters.includeExtSensitiveMediaWarning === undefined) {
            throw new runtime.RequiredError('includeExtSensitiveMediaWarning','Required parameter requestParameters.includeExtSensitiveMediaWarning was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeExtTrustedFriendsMetadata === null || requestParameters.includeExtTrustedFriendsMetadata === undefined) {
            throw new runtime.RequiredError('includeExtTrustedFriendsMetadata','Required parameter requestParameters.includeExtTrustedFriendsMetadata was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.sendErrorCodes === null || requestParameters.sendErrorCodes === undefined) {
            throw new runtime.RequiredError('sendErrorCodes','Required parameter requestParameters.sendErrorCodes was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.simpleQuotedTweet === null || requestParameters.simpleQuotedTweet === undefined) {
            throw new runtime.RequiredError('simpleQuotedTweet','Required parameter requestParameters.simpleQuotedTweet was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.q === null || requestParameters.q === undefined) {
            throw new runtime.RequiredError('q','Required parameter requestParameters.q was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.querySource === null || requestParameters.querySource === undefined) {
            throw new runtime.RequiredError('querySource','Required parameter requestParameters.querySource was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.count === null || requestParameters.count === undefined) {
            throw new runtime.RequiredError('count','Required parameter requestParameters.count was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.requestContext === null || requestParameters.requestContext === undefined) {
            throw new runtime.RequiredError('requestContext','Required parameter requestParameters.requestContext was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.pc === null || requestParameters.pc === undefined) {
            throw new runtime.RequiredError('pc','Required parameter requestParameters.pc was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.spellingCorrections === null || requestParameters.spellingCorrections === undefined) {
            throw new runtime.RequiredError('spellingCorrections','Required parameter requestParameters.spellingCorrections was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.includeExtEditControl === null || requestParameters.includeExtEditControl === undefined) {
            throw new runtime.RequiredError('includeExtEditControl','Required parameter requestParameters.includeExtEditControl was null or undefined when calling getSearchAdaptive.');
        }

        if (requestParameters.ext === null || requestParameters.ext === undefined) {
            throw new runtime.RequiredError('ext','Required parameter requestParameters.ext was null or undefined when calling getSearchAdaptive.');
        }

        const queryParameters: any = {};

        if (requestParameters.includeProfileInterstitialType !== undefined) {
            queryParameters['include_profile_interstitial_type'] = requestParameters.includeProfileInterstitialType;
        }

        if (requestParameters.includeBlocking !== undefined) {
            queryParameters['include_blocking'] = requestParameters.includeBlocking;
        }

        if (requestParameters.includeBlockedBy !== undefined) {
            queryParameters['include_blocked_by'] = requestParameters.includeBlockedBy;
        }

        if (requestParameters.includeFollowedBy !== undefined) {
            queryParameters['include_followed_by'] = requestParameters.includeFollowedBy;
        }

        if (requestParameters.includeWantRetweets !== undefined) {
            queryParameters['include_want_retweets'] = requestParameters.includeWantRetweets;
        }

        if (requestParameters.includeMuteEdge !== undefined) {
            queryParameters['include_mute_edge'] = requestParameters.includeMuteEdge;
        }

        if (requestParameters.includeCanDm !== undefined) {
            queryParameters['include_can_dm'] = requestParameters.includeCanDm;
        }

        if (requestParameters.includeCanMediaTag !== undefined) {
            queryParameters['include_can_media_tag'] = requestParameters.includeCanMediaTag;
        }

        if (requestParameters.includeExtHasNftAvatar !== undefined) {
            queryParameters['include_ext_has_nft_avatar'] = requestParameters.includeExtHasNftAvatar;
        }

        if (requestParameters.includeExtIsBlueVerified !== undefined) {
            queryParameters['include_ext_is_blue_verified'] = requestParameters.includeExtIsBlueVerified;
        }

        if (requestParameters.includeExtVerifiedType !== undefined) {
            queryParameters['include_ext_verified_type'] = requestParameters.includeExtVerifiedType;
        }

        if (requestParameters.includeExtProfileImageShape !== undefined) {
            queryParameters['include_ext_profile_image_shape'] = requestParameters.includeExtProfileImageShape;
        }

        if (requestParameters.skipStatus !== undefined) {
            queryParameters['skip_status'] = requestParameters.skipStatus;
        }

        if (requestParameters.cardsPlatform !== undefined) {
            queryParameters['cards_platform'] = requestParameters.cardsPlatform;
        }

        if (requestParameters.includeCards !== undefined) {
            queryParameters['include_cards'] = requestParameters.includeCards;
        }

        if (requestParameters.includeExtAltText !== undefined) {
            queryParameters['include_ext_alt_text'] = requestParameters.includeExtAltText;
        }

        if (requestParameters.includeExtLimitedActionResults !== undefined) {
            queryParameters['include_ext_limited_action_results'] = requestParameters.includeExtLimitedActionResults;
        }

        if (requestParameters.includeQuoteCount !== undefined) {
            queryParameters['include_quote_count'] = requestParameters.includeQuoteCount;
        }

        if (requestParameters.includeReplyCount !== undefined) {
            queryParameters['include_reply_count'] = requestParameters.includeReplyCount;
        }

        if (requestParameters.tweetMode !== undefined) {
            queryParameters['tweet_mode'] = requestParameters.tweetMode;
        }

        if (requestParameters.includeExtViews !== undefined) {
            queryParameters['include_ext_views'] = requestParameters.includeExtViews;
        }

        if (requestParameters.includeEntities !== undefined) {
            queryParameters['include_entities'] = requestParameters.includeEntities;
        }

        if (requestParameters.includeUserEntities !== undefined) {
            queryParameters['include_user_entities'] = requestParameters.includeUserEntities;
        }

        if (requestParameters.includeExtMediaColor !== undefined) {
            queryParameters['include_ext_media_color'] = requestParameters.includeExtMediaColor;
        }

        if (requestParameters.includeExtMediaAvailability !== undefined) {
            queryParameters['include_ext_media_availability'] = requestParameters.includeExtMediaAvailability;
        }

        if (requestParameters.includeExtSensitiveMediaWarning !== undefined) {
            queryParameters['include_ext_sensitive_media_warning'] = requestParameters.includeExtSensitiveMediaWarning;
        }

        if (requestParameters.includeExtTrustedFriendsMetadata !== undefined) {
            queryParameters['include_ext_trusted_friends_metadata'] = requestParameters.includeExtTrustedFriendsMetadata;
        }

        if (requestParameters.sendErrorCodes !== undefined) {
            queryParameters['send_error_codes'] = requestParameters.sendErrorCodes;
        }

        if (requestParameters.simpleQuotedTweet !== undefined) {
            queryParameters['simple_quoted_tweet'] = requestParameters.simpleQuotedTweet;
        }

        if (requestParameters.q !== undefined) {
            queryParameters['q'] = requestParameters.q;
        }

        if (requestParameters.querySource !== undefined) {
            queryParameters['query_source'] = requestParameters.querySource;
        }

        if (requestParameters.count !== undefined) {
            queryParameters['count'] = requestParameters.count;
        }

        if (requestParameters.requestContext !== undefined) {
            queryParameters['requestContext'] = requestParameters.requestContext;
        }

        if (requestParameters.pc !== undefined) {
            queryParameters['pc'] = requestParameters.pc;
        }

        if (requestParameters.spellingCorrections !== undefined) {
            queryParameters['spelling_corrections'] = requestParameters.spellingCorrections;
        }

        if (requestParameters.includeExtEditControl !== undefined) {
            queryParameters['include_ext_edit_control'] = requestParameters.includeExtEditControl;
        }

        if (requestParameters.ext !== undefined) {
            queryParameters['ext'] = requestParameters.ext;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-twitter-client-language"] = this.configuration.apiKey("x-twitter-client-language"); // ClientLanguage authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Accept"] = this.configuration.apiKey("Accept"); // Accept authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Sec-Fetch-Dest"] = this.configuration.apiKey("Sec-Fetch-Dest"); // SecFetchDest authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Pragma"] = this.configuration.apiKey("Pragma"); // Pragma authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Sec-Ch-Ua-Platform"] = this.configuration.apiKey("Sec-Ch-Ua-Platform"); // SecChUaPlatform authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Sec-Fetch-Mode"] = this.configuration.apiKey("Sec-Fetch-Mode"); // SecFetchMode authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-csrf-token"] = this.configuration.apiKey("x-csrf-token"); // CsrfToken authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-guest-token"] = this.configuration.apiKey("x-guest-token"); // GuestToken authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Sec-Ch-Ua"] = this.configuration.apiKey("Sec-Ch-Ua"); // SecChUa authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-twitter-active-user"] = this.configuration.apiKey("x-twitter-active-user"); // ActiveUser authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["user-agent"] = this.configuration.apiKey("user-agent"); // UserAgent authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Accept-Language"] = this.configuration.apiKey("Accept-Language"); // AcceptLanguage authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Sec-Fetch-Site"] = this.configuration.apiKey("Sec-Fetch-Site"); // SecFetchSite authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-twitter-auth-type"] = this.configuration.apiKey("x-twitter-auth-type"); // AuthType authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Cache-Control"] = this.configuration.apiKey("Cache-Control"); // CacheControl authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Sec-Ch-Ua-Mobile"] = this.configuration.apiKey("Sec-Ch-Ua-Mobile"); // SecChUaMobile authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Accept-Encoding"] = this.configuration.apiKey("Accept-Encoding"); // AcceptEncoding authentication
        }

        const response = await this.request({
            path: `/2/search/adaptive.json`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * get search adaptive
     */
    async getSearchAdaptive(requestParameters: GetSearchAdaptiveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.getSearchAdaptiveRaw(requestParameters, initOverrides);
    }

}
