/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TypeName } from './TypeName';
import {
    TypeNameFromJSON,
    TypeNameFromJSONTyped,
    TypeNameToJSON,
} from './TypeName';
import type { UserLegacy } from './UserLegacy';
import {
    UserLegacyFromJSON,
    UserLegacyFromJSONTyped,
    UserLegacyToJSON,
} from './UserLegacy';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {TypeName}
     * @memberof User
     */
    typename: TypeName;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof User
     */
    affiliatesHighlightedLabel: { [key: string]: any; };
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof User
     */
    businessAccount?: { [key: string]: any; };
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    hasGraduatedAccess?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    hasNftAvatar?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    id: string;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isBlueVerified: boolean;
    /**
     * 
     * @type {UserLegacy}
     * @memberof User
     */
    legacy: UserLegacy;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    restId: string;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    superFollowEligible: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    superFollowedBy: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    superFollowing: boolean;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "typename" in value;
    isInstance = isInstance && "affiliatesHighlightedLabel" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "isBlueVerified" in value;
    isInstance = isInstance && "legacy" in value;
    isInstance = isInstance && "restId" in value;
    isInstance = isInstance && "superFollowEligible" in value;
    isInstance = isInstance && "superFollowedBy" in value;
    isInstance = isInstance && "superFollowing" in value;

    return isInstance;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'typename': TypeNameFromJSON(json['__typename']),
        'affiliatesHighlightedLabel': json['affiliates_highlighted_label'],
        'businessAccount': !exists(json, 'business_account') ? undefined : json['business_account'],
        'hasGraduatedAccess': !exists(json, 'has_graduated_access') ? undefined : json['has_graduated_access'],
        'hasNftAvatar': !exists(json, 'has_nft_avatar') ? undefined : json['has_nft_avatar'],
        'id': json['id'],
        'isBlueVerified': json['is_blue_verified'],
        'legacy': UserLegacyFromJSON(json['legacy']),
        'restId': json['rest_id'],
        'superFollowEligible': json['super_follow_eligible'],
        'superFollowedBy': json['super_followed_by'],
        'superFollowing': json['super_following'],
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '__typename': TypeNameToJSON(value.typename),
        'affiliates_highlighted_label': value.affiliatesHighlightedLabel,
        'business_account': value.businessAccount,
        'has_graduated_access': value.hasGraduatedAccess,
        'has_nft_avatar': value.hasNftAvatar,
        'id': value.id,
        'is_blue_verified': value.isBlueVerified,
        'legacy': UserLegacyToJSON(value.legacy),
        'rest_id': value.restId,
        'super_follow_eligible': value.superFollowEligible,
        'super_followed_by': value.superFollowedBy,
        'super_following': value.superFollowing,
    };
}

