/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserLegacy
 */
export interface UserLegacy {
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    blockedBy: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    blocking: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    canDm: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    canMediaTag: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    createdAt: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    defaultProfile: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    defaultProfileImage: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    description: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof UserLegacy
     */
    entities: { [key: string]: any; };
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    fastFollowersCount: number;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    favouritesCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    followRequestSent?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    followedBy?: boolean;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    followersCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    following?: boolean;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    friendsCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    hasCustomTimelines: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    isTranslator: boolean;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    listedCount: number;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    location: string;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    mediaCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    muting: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    normalFollowersCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    notifications?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserLegacy
     */
    pinnedTweetIdsStr: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    possiblySensitive: boolean;
    /**
     * 
     * @type {object}
     * @memberof UserLegacy
     */
    profileBannerExtensions?: object;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    profileBannerUrl?: string;
    /**
     * 
     * @type {object}
     * @memberof UserLegacy
     */
    profileImageExtensions?: object;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    profileImageUrlHttps: string;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    profileInterstitialType: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    _protected?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    screenName: string;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    statusesCount: number;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    translatorType: string;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    url?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    verified: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    wantRetweets: boolean;
}

/**
 * Check if a given object implements the UserLegacy interface.
 */
export function instanceOfUserLegacy(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "blockedBy" in value;
    isInstance = isInstance && "blocking" in value;
    isInstance = isInstance && "canDm" in value;
    isInstance = isInstance && "canMediaTag" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "defaultProfile" in value;
    isInstance = isInstance && "defaultProfileImage" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "entities" in value;
    isInstance = isInstance && "fastFollowersCount" in value;
    isInstance = isInstance && "favouritesCount" in value;
    isInstance = isInstance && "followersCount" in value;
    isInstance = isInstance && "friendsCount" in value;
    isInstance = isInstance && "hasCustomTimelines" in value;
    isInstance = isInstance && "isTranslator" in value;
    isInstance = isInstance && "listedCount" in value;
    isInstance = isInstance && "location" in value;
    isInstance = isInstance && "mediaCount" in value;
    isInstance = isInstance && "muting" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "normalFollowersCount" in value;
    isInstance = isInstance && "pinnedTweetIdsStr" in value;
    isInstance = isInstance && "possiblySensitive" in value;
    isInstance = isInstance && "profileImageUrlHttps" in value;
    isInstance = isInstance && "profileInterstitialType" in value;
    isInstance = isInstance && "screenName" in value;
    isInstance = isInstance && "statusesCount" in value;
    isInstance = isInstance && "translatorType" in value;
    isInstance = isInstance && "verified" in value;
    isInstance = isInstance && "wantRetweets" in value;

    return isInstance;
}

export function UserLegacyFromJSON(json: any): UserLegacy {
    return UserLegacyFromJSONTyped(json, false);
}

export function UserLegacyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserLegacy {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockedBy': json['blocked_by'],
        'blocking': json['blocking'],
        'canDm': json['can_dm'],
        'canMediaTag': json['can_media_tag'],
        'createdAt': json['created_at'],
        'defaultProfile': json['default_profile'],
        'defaultProfileImage': json['default_profile_image'],
        'description': json['description'],
        'entities': json['entities'],
        'fastFollowersCount': json['fast_followers_count'],
        'favouritesCount': json['favourites_count'],
        'followRequestSent': !exists(json, 'follow_request_sent') ? undefined : json['follow_request_sent'],
        'followedBy': !exists(json, 'followed_by') ? undefined : json['followed_by'],
        'followersCount': json['followers_count'],
        'following': !exists(json, 'following') ? undefined : json['following'],
        'friendsCount': json['friends_count'],
        'hasCustomTimelines': json['has_custom_timelines'],
        'isTranslator': json['is_translator'],
        'listedCount': json['listed_count'],
        'location': json['location'],
        'mediaCount': json['media_count'],
        'muting': json['muting'],
        'name': json['name'],
        'normalFollowersCount': json['normal_followers_count'],
        'notifications': !exists(json, 'notifications') ? undefined : json['notifications'],
        'pinnedTweetIdsStr': json['pinned_tweet_ids_str'],
        'possiblySensitive': json['possibly_sensitive'],
        'profileBannerExtensions': !exists(json, 'profile_banner_extensions') ? undefined : json['profile_banner_extensions'],
        'profileBannerUrl': !exists(json, 'profile_banner_url') ? undefined : json['profile_banner_url'],
        'profileImageExtensions': !exists(json, 'profile_image_extensions') ? undefined : json['profile_image_extensions'],
        'profileImageUrlHttps': json['profile_image_url_https'],
        'profileInterstitialType': json['profile_interstitial_type'],
        '_protected': !exists(json, 'protected') ? undefined : json['protected'],
        'screenName': json['screen_name'],
        'statusesCount': json['statuses_count'],
        'translatorType': json['translator_type'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'verified': json['verified'],
        'wantRetweets': json['want_retweets'],
    };
}

export function UserLegacyToJSON(value?: UserLegacy | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blocked_by': value.blockedBy,
        'blocking': value.blocking,
        'can_dm': value.canDm,
        'can_media_tag': value.canMediaTag,
        'created_at': value.createdAt,
        'default_profile': value.defaultProfile,
        'default_profile_image': value.defaultProfileImage,
        'description': value.description,
        'entities': value.entities,
        'fast_followers_count': value.fastFollowersCount,
        'favourites_count': value.favouritesCount,
        'follow_request_sent': value.followRequestSent,
        'followed_by': value.followedBy,
        'followers_count': value.followersCount,
        'following': value.following,
        'friends_count': value.friendsCount,
        'has_custom_timelines': value.hasCustomTimelines,
        'is_translator': value.isTranslator,
        'listed_count': value.listedCount,
        'location': value.location,
        'media_count': value.mediaCount,
        'muting': value.muting,
        'name': value.name,
        'normal_followers_count': value.normalFollowersCount,
        'notifications': value.notifications,
        'pinned_tweet_ids_str': value.pinnedTweetIdsStr,
        'possibly_sensitive': value.possiblySensitive,
        'profile_banner_extensions': value.profileBannerExtensions,
        'profile_banner_url': value.profileBannerUrl,
        'profile_image_extensions': value.profileImageExtensions,
        'profile_image_url_https': value.profileImageUrlHttps,
        'profile_interstitial_type': value.profileInterstitialType,
        'protected': value._protected,
        'screen_name': value.screenName,
        'statuses_count': value.statusesCount,
        'translator_type': value.translatorType,
        'url': value.url,
        'verified': value.verified,
        'want_retweets': value.wantRetweets,
    };
}

