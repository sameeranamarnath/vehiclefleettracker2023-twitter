/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TypeName } from './TypeName';
import {
    TypeNameFromJSON,
    TypeNameFromJSONTyped,
    TypeNameToJSON,
} from './TypeName';
import type { UserResultByScreenNameLegacy } from './UserResultByScreenNameLegacy';
import {
    UserResultByScreenNameLegacyFromJSON,
    UserResultByScreenNameLegacyFromJSONTyped,
    UserResultByScreenNameLegacyToJSON,
} from './UserResultByScreenNameLegacy';

/**
 * 
 * @export
 * @interface UserResultByScreenNameResult
 */
export interface UserResultByScreenNameResult {
    /**
     * 
     * @type {TypeName}
     * @memberof UserResultByScreenNameResult
     */
    typename: TypeName;
    /**
     * 
     * @type {string}
     * @memberof UserResultByScreenNameResult
     */
    id: string;
    /**
     * 
     * @type {UserResultByScreenNameLegacy}
     * @memberof UserResultByScreenNameResult
     */
    legacy: UserResultByScreenNameLegacy;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof UserResultByScreenNameResult
     */
    profilemodules: { [key: string]: any; };
    /**
     * 
     * @type {string}
     * @memberof UserResultByScreenNameResult
     */
    restId: string;
}

/**
 * Check if a given object implements the UserResultByScreenNameResult interface.
 */
export function instanceOfUserResultByScreenNameResult(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "typename" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "legacy" in value;
    isInstance = isInstance && "profilemodules" in value;
    isInstance = isInstance && "restId" in value;

    return isInstance;
}

export function UserResultByScreenNameResultFromJSON(json: any): UserResultByScreenNameResult {
    return UserResultByScreenNameResultFromJSONTyped(json, false);
}

export function UserResultByScreenNameResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserResultByScreenNameResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'typename': TypeNameFromJSON(json['__typename']),
        'id': json['id'],
        'legacy': UserResultByScreenNameLegacyFromJSON(json['legacy']),
        'profilemodules': json['profilemodules'],
        'restId': json['rest_id'],
    };
}

export function UserResultByScreenNameResultToJSON(value?: UserResultByScreenNameResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '__typename': TypeNameToJSON(value.typename),
        'id': value.id,
        'legacy': UserResultByScreenNameLegacyToJSON(value.legacy),
        'profilemodules': value.profilemodules,
        'rest_id': value.restId,
    };
}

