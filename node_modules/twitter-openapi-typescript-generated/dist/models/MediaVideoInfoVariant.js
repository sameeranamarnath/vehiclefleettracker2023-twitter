"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MediaVideoInfoVariantToJSON = exports.MediaVideoInfoVariantFromJSONTyped = exports.MediaVideoInfoVariantFromJSON = exports.instanceOfMediaVideoInfoVariant = void 0;
var runtime_1 = require("../runtime");
/**
 * Check if a given object implements the MediaVideoInfoVariant interface.
 */
function instanceOfMediaVideoInfoVariant(value) {
    var isInstance = true;
    isInstance = isInstance && "contentType" in value;
    isInstance = isInstance && "url" in value;
    return isInstance;
}
exports.instanceOfMediaVideoInfoVariant = instanceOfMediaVideoInfoVariant;
function MediaVideoInfoVariantFromJSON(json) {
    return MediaVideoInfoVariantFromJSONTyped(json, false);
}
exports.MediaVideoInfoVariantFromJSON = MediaVideoInfoVariantFromJSON;
function MediaVideoInfoVariantFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'bitrate': !(0, runtime_1.exists)(json, 'bitrate') ? undefined : json['bitrate'],
        'contentType': json['content_type'],
        'url': json['url'],
    };
}
exports.MediaVideoInfoVariantFromJSONTyped = MediaVideoInfoVariantFromJSONTyped;
function MediaVideoInfoVariantToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'bitrate': value.bitrate,
        'content_type': value.contentType,
        'url': value.url,
    };
}
exports.MediaVideoInfoVariantToJSON = MediaVideoInfoVariantToJSON;
//# sourceMappingURL=MediaVideoInfoVariant.js.map