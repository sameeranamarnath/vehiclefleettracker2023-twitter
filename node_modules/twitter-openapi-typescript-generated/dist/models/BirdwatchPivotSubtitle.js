"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BirdwatchPivotSubtitleToJSON = exports.BirdwatchPivotSubtitleFromJSONTyped = exports.BirdwatchPivotSubtitleFromJSON = exports.instanceOfBirdwatchPivotSubtitle = void 0;
var BirdwatchEntity_1 = require("./BirdwatchEntity");
/**
 * Check if a given object implements the BirdwatchPivotSubtitle interface.
 */
function instanceOfBirdwatchPivotSubtitle(value) {
    var isInstance = true;
    isInstance = isInstance && "entities" in value;
    isInstance = isInstance && "text" in value;
    return isInstance;
}
exports.instanceOfBirdwatchPivotSubtitle = instanceOfBirdwatchPivotSubtitle;
function BirdwatchPivotSubtitleFromJSON(json) {
    return BirdwatchPivotSubtitleFromJSONTyped(json, false);
}
exports.BirdwatchPivotSubtitleFromJSON = BirdwatchPivotSubtitleFromJSON;
function BirdwatchPivotSubtitleFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'entities': (json['entities'].map(BirdwatchEntity_1.BirdwatchEntityFromJSON)),
        'text': json['text'],
    };
}
exports.BirdwatchPivotSubtitleFromJSONTyped = BirdwatchPivotSubtitleFromJSONTyped;
function BirdwatchPivotSubtitleToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'entities': (value.entities.map(BirdwatchEntity_1.BirdwatchEntityToJSON)),
        'text': value.text,
    };
}
exports.BirdwatchPivotSubtitleToJSON = BirdwatchPivotSubtitleToJSON;
//# sourceMappingURL=BirdwatchPivotSubtitle.js.map