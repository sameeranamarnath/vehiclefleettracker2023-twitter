"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TweetToJSON = exports.TweetFromJSONTyped = exports.TweetFromJSON = exports.instanceOfTweet = void 0;
var runtime_1 = require("../runtime");
var BirdwatchPivot_1 = require("./BirdwatchPivot");
var ItemResult_1 = require("./ItemResult");
var NoteTweet_1 = require("./NoteTweet");
var TweetCard_1 = require("./TweetCard");
var TweetEditControl_1 = require("./TweetEditControl");
var TweetEditPrespective_1 = require("./TweetEditPrespective");
var TweetLegacy_1 = require("./TweetLegacy");
var TweetView_1 = require("./TweetView");
var TypeName_1 = require("./TypeName");
var UserResultCore_1 = require("./UserResultCore");
/**
 * Check if a given object implements the Tweet interface.
 */
function instanceOfTweet(value) {
    var isInstance = true;
    isInstance = isInstance && "editControl" in value;
    isInstance = isInstance && "isTranslatable" in value;
    isInstance = isInstance && "restId" in value;
    isInstance = isInstance && "views" in value;
    return isInstance;
}
exports.instanceOfTweet = instanceOfTweet;
function TweetFromJSON(json) {
    return TweetFromJSONTyped(json, false);
}
exports.TweetFromJSON = TweetFromJSON;
function TweetFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'typename': !(0, runtime_1.exists)(json, '__typename') ? undefined : (0, TypeName_1.TypeNameFromJSON)(json['__typename']),
        'birdwatchPivot': !(0, runtime_1.exists)(json, 'birdwatch_pivot') ? undefined : (0, BirdwatchPivot_1.BirdwatchPivotFromJSON)(json['birdwatch_pivot']),
        'card': !(0, runtime_1.exists)(json, 'card') ? undefined : (0, TweetCard_1.TweetCardFromJSON)(json['card']),
        'core': !(0, runtime_1.exists)(json, 'core') ? undefined : (0, UserResultCore_1.UserResultCoreFromJSON)(json['core']),
        'editControl': (0, TweetEditControl_1.TweetEditControlFromJSON)(json['edit_control']),
        'editPrespective': !(0, runtime_1.exists)(json, 'edit_prespective') ? undefined : (0, TweetEditPrespective_1.TweetEditPrespectiveFromJSON)(json['edit_prespective']),
        'isTranslatable': json['is_translatable'],
        'legacy': !(0, runtime_1.exists)(json, 'legacy') ? undefined : (0, TweetLegacy_1.TweetLegacyFromJSON)(json['legacy']),
        'noteTweet': !(0, runtime_1.exists)(json, 'note_tweet') ? undefined : (0, NoteTweet_1.NoteTweetFromJSON)(json['note_tweet']),
        'quickPromoteEligibility': !(0, runtime_1.exists)(json, 'quick_promote_eligibility') ? undefined : json['quick_promote_eligibility'],
        'quotedStatusResult': !(0, runtime_1.exists)(json, 'quoted_status_result') ? undefined : (0, ItemResult_1.ItemResultFromJSON)(json['quoted_status_result']),
        'restId': json['rest_id'],
        'source': !(0, runtime_1.exists)(json, 'source') ? undefined : json['source'],
        'unmentionData': !(0, runtime_1.exists)(json, 'unmention_data') ? undefined : json['unmention_data'],
        'views': (0, TweetView_1.TweetViewFromJSON)(json['views']),
    };
}
exports.TweetFromJSONTyped = TweetFromJSONTyped;
function TweetToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        '__typename': (0, TypeName_1.TypeNameToJSON)(value.typename),
        'birdwatch_pivot': (0, BirdwatchPivot_1.BirdwatchPivotToJSON)(value.birdwatchPivot),
        'card': (0, TweetCard_1.TweetCardToJSON)(value.card),
        'core': (0, UserResultCore_1.UserResultCoreToJSON)(value.core),
        'edit_control': (0, TweetEditControl_1.TweetEditControlToJSON)(value.editControl),
        'edit_prespective': (0, TweetEditPrespective_1.TweetEditPrespectiveToJSON)(value.editPrespective),
        'is_translatable': value.isTranslatable,
        'legacy': (0, TweetLegacy_1.TweetLegacyToJSON)(value.legacy),
        'note_tweet': (0, NoteTweet_1.NoteTweetToJSON)(value.noteTweet),
        'quick_promote_eligibility': value.quickPromoteEligibility,
        'quoted_status_result': (0, ItemResult_1.ItemResultToJSON)(value.quotedStatusResult),
        'rest_id': value.restId,
        'source': value.source,
        'unmention_data': value.unmentionData,
        'views': (0, TweetView_1.TweetViewToJSON)(value.views),
    };
}
exports.TweetToJSON = TweetToJSON;
//# sourceMappingURL=Tweet.js.map