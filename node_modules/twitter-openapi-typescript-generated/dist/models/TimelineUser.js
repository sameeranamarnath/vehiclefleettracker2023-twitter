"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimelineUserToJSON = exports.TimelineUserFromJSONTyped = exports.TimelineUserFromJSON = exports.instanceOfTimelineUser = exports.TimelineUserUserDisplayTypeEnum = void 0;
var runtime_1 = require("../runtime");
var ContentItemType_1 = require("./ContentItemType");
var SocialContext_1 = require("./SocialContext");
var TypeName_1 = require("./TypeName");
var UserResults_1 = require("./UserResults");
/**
 * @export
 */
exports.TimelineUserUserDisplayTypeEnum = {
    User: 'User',
    UserDetailed: 'UserDetailed',
    SubscribableUser: 'SubscribableUser'
};
/**
 * Check if a given object implements the TimelineUser interface.
 */
function instanceOfTimelineUser(value) {
    var isInstance = true;
    isInstance = isInstance && "typename" in value;
    isInstance = isInstance && "itemType" in value;
    isInstance = isInstance && "userDisplayType" in value;
    isInstance = isInstance && "userResults" in value;
    return isInstance;
}
exports.instanceOfTimelineUser = instanceOfTimelineUser;
function TimelineUserFromJSON(json) {
    return TimelineUserFromJSONTyped(json, false);
}
exports.TimelineUserFromJSON = TimelineUserFromJSON;
function TimelineUserFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'socialContext': !(0, runtime_1.exists)(json, 'SocialContext') ? undefined : (0, SocialContext_1.SocialContextFromJSON)(json['SocialContext']),
        'typename': (0, TypeName_1.TypeNameFromJSON)(json['__typename']),
        'itemType': (0, ContentItemType_1.ContentItemTypeFromJSON)(json['itemType']),
        'userDisplayType': json['userDisplayType'],
        'userResults': (0, UserResults_1.UserResultsFromJSON)(json['user_results']),
    };
}
exports.TimelineUserFromJSONTyped = TimelineUserFromJSONTyped;
function TimelineUserToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'SocialContext': (0, SocialContext_1.SocialContextToJSON)(value.socialContext),
        '__typename': (0, TypeName_1.TypeNameToJSON)(value.typename),
        'itemType': (0, ContentItemType_1.ContentItemTypeToJSON)(value.itemType),
        'userDisplayType': value.userDisplayType,
        'user_results': (0, UserResults_1.UserResultsToJSON)(value.userResults),
    };
}
exports.TimelineUserToJSON = TimelineUserToJSON;
//# sourceMappingURL=TimelineUser.js.map