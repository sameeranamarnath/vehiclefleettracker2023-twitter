"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NoteTweetResultDataToJSON = exports.NoteTweetResultDataFromJSONTyped = exports.NoteTweetResultDataFromJSON = exports.instanceOfNoteTweetResultData = void 0;
var runtime_1 = require("../runtime");
var Entities_1 = require("./Entities");
var NoteTweetResultMedia_1 = require("./NoteTweetResultMedia");
var NoteTweetResultRichText_1 = require("./NoteTweetResultRichText");
/**
 * Check if a given object implements the NoteTweetResultData interface.
 */
function instanceOfNoteTweetResultData(value) {
    var isInstance = true;
    isInstance = isInstance && "entitySet" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "text" in value;
    return isInstance;
}
exports.instanceOfNoteTweetResultData = instanceOfNoteTweetResultData;
function NoteTweetResultDataFromJSON(json) {
    return NoteTweetResultDataFromJSONTyped(json, false);
}
exports.NoteTweetResultDataFromJSON = NoteTweetResultDataFromJSON;
function NoteTweetResultDataFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'entitySet': (0, Entities_1.EntitiesFromJSON)(json['entity_set']),
        'id': json['id'],
        'media': !(0, runtime_1.exists)(json, 'media') ? undefined : (0, NoteTweetResultMedia_1.NoteTweetResultMediaFromJSON)(json['media']),
        'richtext': !(0, runtime_1.exists)(json, 'richtext') ? undefined : (0, NoteTweetResultRichText_1.NoteTweetResultRichTextFromJSON)(json['richtext']),
        'text': json['text'],
    };
}
exports.NoteTweetResultDataFromJSONTyped = NoteTweetResultDataFromJSONTyped;
function NoteTweetResultDataToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'entity_set': (0, Entities_1.EntitiesToJSON)(value.entitySet),
        'id': value.id,
        'media': (0, NoteTweetResultMedia_1.NoteTweetResultMediaToJSON)(value.media),
        'richtext': (0, NoteTweetResultRichText_1.NoteTweetResultRichTextToJSON)(value.richtext),
        'text': value.text,
    };
}
exports.NoteTweetResultDataToJSON = NoteTweetResultDataToJSON;
//# sourceMappingURL=NoteTweetResultData.js.map