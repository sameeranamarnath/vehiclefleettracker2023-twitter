"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentUnionToJSON = exports.ContentUnionFromJSONTyped = exports.ContentUnionFromJSON = void 0;
var TimelineTimelineCursor_1 = require("./TimelineTimelineCursor");
var TimelineTimelineItem_1 = require("./TimelineTimelineItem");
var TimelineTimelineModule_1 = require("./TimelineTimelineModule");
function ContentUnionFromJSON(json) {
    return ContentUnionFromJSONTyped(json, false);
}
exports.ContentUnionFromJSON = ContentUnionFromJSON;
function ContentUnionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['entryType']) {
        case 'TimelineTimelineCursor':
            return __assign(__assign({}, (0, TimelineTimelineCursor_1.TimelineTimelineCursorFromJSONTyped)(json, true)), { entryType: 'TimelineTimelineCursor' });
        case 'TimelineTimelineItem':
            return __assign(__assign({}, (0, TimelineTimelineItem_1.TimelineTimelineItemFromJSONTyped)(json, true)), { entryType: 'TimelineTimelineItem' });
        case 'TimelineTimelineModule':
            return __assign(__assign({}, (0, TimelineTimelineModule_1.TimelineTimelineModuleFromJSONTyped)(json, true)), { entryType: 'TimelineTimelineModule' });
        default:
            throw new Error("No variant of ContentUnion exists with 'entryType=".concat(json['entryType'], "'"));
    }
}
exports.ContentUnionFromJSONTyped = ContentUnionFromJSONTyped;
function ContentUnionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['entryType']) {
        case 'TimelineTimelineCursor':
            return (0, TimelineTimelineCursor_1.TimelineTimelineCursorToJSON)(value);
        case 'TimelineTimelineItem':
            return (0, TimelineTimelineItem_1.TimelineTimelineItemToJSON)(value);
        case 'TimelineTimelineModule':
            return (0, TimelineTimelineModule_1.TimelineTimelineModuleToJSON)(value);
        default:
            throw new Error("No variant of ContentUnion exists with 'entryType=".concat(value['entryType'], "'"));
    }
}
exports.ContentUnionToJSON = ContentUnionToJSON;
//# sourceMappingURL=ContentUnion.js.map