"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InstructionUnionToJSON = exports.InstructionUnionFromJSONTyped = exports.InstructionUnionFromJSON = void 0;
var TimelineAddEntries_1 = require("./TimelineAddEntries");
var TimelineAddToModule_1 = require("./TimelineAddToModule");
var TimelineClearCache_1 = require("./TimelineClearCache");
var TimelinePinEntry_1 = require("./TimelinePinEntry");
var TimelineReplaceEntry_1 = require("./TimelineReplaceEntry");
var TimelineShowAlert_1 = require("./TimelineShowAlert");
var TimelineShowCover_1 = require("./TimelineShowCover");
var TimelineTerminateTimeline_1 = require("./TimelineTerminateTimeline");
function InstructionUnionFromJSON(json) {
    return InstructionUnionFromJSONTyped(json, false);
}
exports.InstructionUnionFromJSON = InstructionUnionFromJSON;
function InstructionUnionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'TimelineAddEntries':
            return __assign(__assign({}, (0, TimelineAddEntries_1.TimelineAddEntriesFromJSONTyped)(json, true)), { type: 'TimelineAddEntries' });
        case 'TimelineAddToModule':
            return __assign(__assign({}, (0, TimelineAddToModule_1.TimelineAddToModuleFromJSONTyped)(json, true)), { type: 'TimelineAddToModule' });
        case 'TimelineClearCache':
            return __assign(__assign({}, (0, TimelineClearCache_1.TimelineClearCacheFromJSONTyped)(json, true)), { type: 'TimelineClearCache' });
        case 'TimelinePinEntry':
            return __assign(__assign({}, (0, TimelinePinEntry_1.TimelinePinEntryFromJSONTyped)(json, true)), { type: 'TimelinePinEntry' });
        case 'TimelineReplaceEntry':
            return __assign(__assign({}, (0, TimelineReplaceEntry_1.TimelineReplaceEntryFromJSONTyped)(json, true)), { type: 'TimelineReplaceEntry' });
        case 'TimelineShowAlert':
            return __assign(__assign({}, (0, TimelineShowAlert_1.TimelineShowAlertFromJSONTyped)(json, true)), { type: 'TimelineShowAlert' });
        case 'TimelineShowCover':
            return __assign(__assign({}, (0, TimelineShowCover_1.TimelineShowCoverFromJSONTyped)(json, true)), { type: 'TimelineShowCover' });
        case 'TimelineTerminateTimeline':
            return __assign(__assign({}, (0, TimelineTerminateTimeline_1.TimelineTerminateTimelineFromJSONTyped)(json, true)), { type: 'TimelineTerminateTimeline' });
        default:
            throw new Error("No variant of InstructionUnion exists with 'type=".concat(json['type'], "'"));
    }
}
exports.InstructionUnionFromJSONTyped = InstructionUnionFromJSONTyped;
function InstructionUnionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'TimelineAddEntries':
            return (0, TimelineAddEntries_1.TimelineAddEntriesToJSON)(value);
        case 'TimelineAddToModule':
            return (0, TimelineAddToModule_1.TimelineAddToModuleToJSON)(value);
        case 'TimelineClearCache':
            return (0, TimelineClearCache_1.TimelineClearCacheToJSON)(value);
        case 'TimelinePinEntry':
            return (0, TimelinePinEntry_1.TimelinePinEntryToJSON)(value);
        case 'TimelineReplaceEntry':
            return (0, TimelineReplaceEntry_1.TimelineReplaceEntryToJSON)(value);
        case 'TimelineShowAlert':
            return (0, TimelineShowAlert_1.TimelineShowAlertToJSON)(value);
        case 'TimelineShowCover':
            return (0, TimelineShowCover_1.TimelineShowCoverToJSON)(value);
        case 'TimelineTerminateTimeline':
            return (0, TimelineTerminateTimeline_1.TimelineTerminateTimelineToJSON)(value);
        default:
            throw new Error("No variant of InstructionUnion exists with 'type=".concat(value['type'], "'"));
    }
}
exports.InstructionUnionToJSON = InstructionUnionToJSON;
//# sourceMappingURL=InstructionUnion.js.map