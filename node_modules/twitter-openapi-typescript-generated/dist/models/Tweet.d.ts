/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BirdwatchPivot } from './BirdwatchPivot';
import type { ItemResult } from './ItemResult';
import type { NoteTweet } from './NoteTweet';
import type { TweetCard } from './TweetCard';
import type { TweetEditControl } from './TweetEditControl';
import type { TweetEditPrespective } from './TweetEditPrespective';
import type { TweetLegacy } from './TweetLegacy';
import type { TweetView } from './TweetView';
import type { TypeName } from './TypeName';
import type { UserResultCore } from './UserResultCore';
/**
 *
 * @export
 * @interface Tweet
 */
export interface Tweet {
    /**
     *
     * @type {TypeName}
     * @memberof Tweet
     */
    typename?: TypeName;
    /**
     *
     * @type {BirdwatchPivot}
     * @memberof Tweet
     */
    birdwatchPivot?: BirdwatchPivot;
    /**
     *
     * @type {TweetCard}
     * @memberof Tweet
     */
    card?: TweetCard;
    /**
     *
     * @type {UserResultCore}
     * @memberof Tweet
     */
    core?: UserResultCore;
    /**
     *
     * @type {TweetEditControl}
     * @memberof Tweet
     */
    editControl: TweetEditControl;
    /**
     *
     * @type {TweetEditPrespective}
     * @memberof Tweet
     */
    editPrespective?: TweetEditPrespective;
    /**
     *
     * @type {boolean}
     * @memberof Tweet
     */
    isTranslatable: boolean;
    /**
     *
     * @type {TweetLegacy}
     * @memberof Tweet
     */
    legacy?: TweetLegacy;
    /**
     *
     * @type {NoteTweet}
     * @memberof Tweet
     */
    noteTweet?: NoteTweet;
    /**
     *
     * @type {object}
     * @memberof Tweet
     */
    quickPromoteEligibility?: object;
    /**
     *
     * @type {ItemResult}
     * @memberof Tweet
     */
    quotedStatusResult?: ItemResult;
    /**
     *
     * @type {string}
     * @memberof Tweet
     */
    restId: string;
    /**
     *
     * @type {string}
     * @memberof Tweet
     */
    source?: string;
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof Tweet
     */
    unmentionData?: {
        [key: string]: any;
    };
    /**
     *
     * @type {TweetView}
     * @memberof Tweet
     */
    views: TweetView;
}
/**
 * Check if a given object implements the Tweet interface.
 */
export declare function instanceOfTweet(value: object): boolean;
export declare function TweetFromJSON(json: any): Tweet;
export declare function TweetFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tweet;
export declare function TweetToJSON(value?: Tweet | null): any;
//# sourceMappingURL=Tweet.d.ts.map