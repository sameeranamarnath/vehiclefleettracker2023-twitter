"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TweetLegacyToJSON = exports.TweetLegacyFromJSONTyped = exports.TweetLegacyFromJSON = exports.instanceOfTweetLegacy = void 0;
var runtime_1 = require("../runtime");
var Entities_1 = require("./Entities");
var ExtendedEntities_1 = require("./ExtendedEntities");
var ItemResult_1 = require("./ItemResult");
var SelfThread_1 = require("./SelfThread");
/**
 * Check if a given object implements the TweetLegacy interface.
 */
function instanceOfTweetLegacy(value) {
    var isInstance = true;
    isInstance = isInstance && "bookmarkCount" in value;
    isInstance = isInstance && "bookmarked" in value;
    isInstance = isInstance && "conversationIdStr" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "displayTextRange" in value;
    isInstance = isInstance && "entities" in value;
    isInstance = isInstance && "favoriteCount" in value;
    isInstance = isInstance && "favorited" in value;
    isInstance = isInstance && "fullText" in value;
    isInstance = isInstance && "idStr" in value;
    isInstance = isInstance && "isQuoteStatus" in value;
    isInstance = isInstance && "lang" in value;
    isInstance = isInstance && "quoteCount" in value;
    isInstance = isInstance && "replyCount" in value;
    isInstance = isInstance && "retweetCount" in value;
    isInstance = isInstance && "retweeted" in value;
    isInstance = isInstance && "userIdStr" in value;
    return isInstance;
}
exports.instanceOfTweetLegacy = instanceOfTweetLegacy;
function TweetLegacyFromJSON(json) {
    return TweetLegacyFromJSONTyped(json, false);
}
exports.TweetLegacyFromJSON = TweetLegacyFromJSON;
function TweetLegacyFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'bookmarkCount': json['bookmark_count'],
        'bookmarked': json['bookmarked'],
        'conversationIdStr': json['conversation_id_str'],
        'createdAt': json['created_at'],
        'displayTextRange': json['display_text_range'],
        'entities': (0, Entities_1.EntitiesFromJSON)(json['entities']),
        'extendedEntities': !(0, runtime_1.exists)(json, 'extended_entities') ? undefined : (0, ExtendedEntities_1.ExtendedEntitiesFromJSON)(json['extended_entities']),
        'favoriteCount': json['favorite_count'],
        'favorited': json['favorited'],
        'fullText': json['full_text'],
        'idStr': json['id_str'],
        'isQuoteStatus': json['is_quote_status'],
        'lang': json['lang'],
        'possiblySensitive': !(0, runtime_1.exists)(json, 'possibly_sensitive') ? undefined : json['possibly_sensitive'],
        'possiblySensitiveEditable': !(0, runtime_1.exists)(json, 'possibly_sensitive_editable') ? undefined : json['possibly_sensitive_editable'],
        'quoteCount': json['quote_count'],
        'replyCount': json['reply_count'],
        'retweetCount': json['retweet_count'],
        'retweeted': json['retweeted'],
        'retweetedStatusResult': !(0, runtime_1.exists)(json, 'retweeted_status_result') ? undefined : (0, ItemResult_1.ItemResultFromJSON)(json['retweeted_status_result']),
        'selfThread': !(0, runtime_1.exists)(json, 'self_thread') ? undefined : (0, SelfThread_1.SelfThreadFromJSON)(json['self_thread']),
        'userIdStr': json['user_id_str'],
    };
}
exports.TweetLegacyFromJSONTyped = TweetLegacyFromJSONTyped;
function TweetLegacyToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'bookmark_count': value.bookmarkCount,
        'bookmarked': value.bookmarked,
        'conversation_id_str': value.conversationIdStr,
        'created_at': value.createdAt,
        'display_text_range': value.displayTextRange,
        'entities': (0, Entities_1.EntitiesToJSON)(value.entities),
        'extended_entities': (0, ExtendedEntities_1.ExtendedEntitiesToJSON)(value.extendedEntities),
        'favorite_count': value.favoriteCount,
        'favorited': value.favorited,
        'full_text': value.fullText,
        'id_str': value.idStr,
        'is_quote_status': value.isQuoteStatus,
        'lang': value.lang,
        'possibly_sensitive': value.possiblySensitive,
        'possibly_sensitive_editable': value.possiblySensitiveEditable,
        'quote_count': value.quoteCount,
        'reply_count': value.replyCount,
        'retweet_count': value.retweetCount,
        'retweeted': value.retweeted,
        'retweeted_status_result': (0, ItemResult_1.ItemResultToJSON)(value.retweetedStatusResult),
        'self_thread': (0, SelfThread_1.SelfThreadToJSON)(value.selfThread),
        'user_id_str': value.userIdStr,
    };
}
exports.TweetLegacyToJSON = TweetLegacyToJSON;
//# sourceMappingURL=TweetLegacy.js.map