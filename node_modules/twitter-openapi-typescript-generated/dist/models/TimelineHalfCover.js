"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimelineHalfCoverToJSON = exports.TimelineHalfCoverFromJSONTyped = exports.TimelineHalfCoverFromJSON = exports.instanceOfTimelineHalfCover = exports.TimelineHalfCoverTypeEnum = exports.TimelineHalfCoverHalfCoverDisplayTypeEnum = void 0;
var Callback_1 = require("./Callback");
var CoverCta_1 = require("./CoverCta");
var Text_1 = require("./Text");
/**
 * @export
 */
exports.TimelineHalfCoverHalfCoverDisplayTypeEnum = {
    Cover: 'Cover'
};
/**
 * @export
 */
exports.TimelineHalfCoverTypeEnum = {
    TimelineHalfCover: 'TimelineHalfCover'
};
/**
 * Check if a given object implements the TimelineHalfCover interface.
 */
function instanceOfTimelineHalfCover(value) {
    var isInstance = true;
    isInstance = isInstance && "dismissible" in value;
    isInstance = isInstance && "halfCoverDisplayType" in value;
    isInstance = isInstance && "impressionCallbacks" in value;
    isInstance = isInstance && "primaryCoverCta" in value;
    isInstance = isInstance && "primaryText" in value;
    isInstance = isInstance && "secondaryText" in value;
    isInstance = isInstance && "type" in value;
    return isInstance;
}
exports.instanceOfTimelineHalfCover = instanceOfTimelineHalfCover;
function TimelineHalfCoverFromJSON(json) {
    return TimelineHalfCoverFromJSONTyped(json, false);
}
exports.TimelineHalfCoverFromJSON = TimelineHalfCoverFromJSON;
function TimelineHalfCoverFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'dismissible': json['dismissible'],
        'halfCoverDisplayType': json['halfCoverDisplayType'],
        'impressionCallbacks': (json['impressionCallbacks'].map(Callback_1.CallbackFromJSON)),
        'primaryCoverCta': (0, CoverCta_1.CoverCtaFromJSON)(json['primaryCoverCta']),
        'primaryText': (0, Text_1.TextFromJSON)(json['primaryText']),
        'secondaryText': (0, Text_1.TextFromJSON)(json['secondaryText']),
        'type': json['type'],
    };
}
exports.TimelineHalfCoverFromJSONTyped = TimelineHalfCoverFromJSONTyped;
function TimelineHalfCoverToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'dismissible': value.dismissible,
        'halfCoverDisplayType': value.halfCoverDisplayType,
        'impressionCallbacks': (value.impressionCallbacks.map(Callback_1.CallbackToJSON)),
        'primaryCoverCta': (0, CoverCta_1.CoverCtaToJSON)(value.primaryCoverCta),
        'primaryText': (0, Text_1.TextToJSON)(value.primaryText),
        'secondaryText': (0, Text_1.TextToJSON)(value.secondaryText),
        'type': value.type,
    };
}
exports.TimelineHalfCoverToJSON = TimelineHalfCoverToJSON;
//# sourceMappingURL=TimelineHalfCover.js.map