"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoverCtaToJSON = exports.CoverCtaFromJSONTyped = exports.CoverCtaFromJSON = exports.instanceOfCoverCta = exports.CoverCtaButtonStyleEnum = void 0;
var runtime_1 = require("../runtime");
var Callback_1 = require("./Callback");
var CtaClientEventInfo_1 = require("./CtaClientEventInfo");
var TimelineCoverBehavior_1 = require("./TimelineCoverBehavior");
/**
 * @export
 */
exports.CoverCtaButtonStyleEnum = {
    Primary: 'Primary'
};
/**
 * Check if a given object implements the CoverCta interface.
 */
function instanceOfCoverCta(value) {
    var isInstance = true;
    isInstance = isInstance && "callbacks" in value;
    isInstance = isInstance && "clientEventInfo" in value;
    isInstance = isInstance && "ctaBehavior" in value;
    return isInstance;
}
exports.instanceOfCoverCta = instanceOfCoverCta;
function CoverCtaFromJSON(json) {
    return CoverCtaFromJSONTyped(json, false);
}
exports.CoverCtaFromJSON = CoverCtaFromJSON;
function CoverCtaFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'text': !(0, runtime_1.exists)(json, 'Text') ? undefined : json['Text'],
        'buttonStyle': !(0, runtime_1.exists)(json, 'buttonStyle') ? undefined : json['buttonStyle'],
        'callbacks': (json['callbacks'].map(Callback_1.CallbackFromJSON)),
        'clientEventInfo': (0, CtaClientEventInfo_1.CtaClientEventInfoFromJSON)(json['clientEventInfo']),
        'ctaBehavior': (0, TimelineCoverBehavior_1.TimelineCoverBehaviorFromJSON)(json['ctaBehavior']),
    };
}
exports.CoverCtaFromJSONTyped = CoverCtaFromJSONTyped;
function CoverCtaToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Text': value.text,
        'buttonStyle': value.buttonStyle,
        'callbacks': (value.callbacks.map(Callback_1.CallbackToJSON)),
        'clientEventInfo': (0, CtaClientEventInfo_1.CtaClientEventInfoToJSON)(value.clientEventInfo),
        'ctaBehavior': (0, TimelineCoverBehavior_1.TimelineCoverBehaviorToJSON)(value.ctaBehavior),
    };
}
exports.CoverCtaToJSON = CoverCtaToJSON;
//# sourceMappingURL=CoverCta.js.map