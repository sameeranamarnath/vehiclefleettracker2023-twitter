"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostCreateTweetRequestVariablesToJSON = exports.PostCreateTweetRequestVariablesFromJSONTyped = exports.PostCreateTweetRequestVariablesFromJSON = exports.instanceOfPostCreateTweetRequestVariables = void 0;
var runtime_1 = require("../runtime");
var PostCreateTweetRequestVariablesMedia_1 = require("./PostCreateTweetRequestVariablesMedia");
var PostCreateTweetRequestVariablesReply_1 = require("./PostCreateTweetRequestVariablesReply");
/**
 * Check if a given object implements the PostCreateTweetRequestVariables interface.
 */
function instanceOfPostCreateTweetRequestVariables(value) {
    var isInstance = true;
    isInstance = isInstance && "darkRequest" in value;
    isInstance = isInstance && "media" in value;
    isInstance = isInstance && "semanticAnnotationIds" in value;
    isInstance = isInstance && "tweetText" in value;
    return isInstance;
}
exports.instanceOfPostCreateTweetRequestVariables = instanceOfPostCreateTweetRequestVariables;
function PostCreateTweetRequestVariablesFromJSON(json) {
    return PostCreateTweetRequestVariablesFromJSONTyped(json, false);
}
exports.PostCreateTweetRequestVariablesFromJSON = PostCreateTweetRequestVariablesFromJSON;
function PostCreateTweetRequestVariablesFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'darkRequest': json['dark_request'],
        'media': (0, PostCreateTweetRequestVariablesMedia_1.PostCreateTweetRequestVariablesMediaFromJSON)(json['media']),
        'reply': !(0, runtime_1.exists)(json, 'reply') ? undefined : (0, PostCreateTweetRequestVariablesReply_1.PostCreateTweetRequestVariablesReplyFromJSON)(json['reply']),
        'semanticAnnotationIds': json['semantic_annotation_ids'],
        'tweetText': json['tweet_text'],
    };
}
exports.PostCreateTweetRequestVariablesFromJSONTyped = PostCreateTweetRequestVariablesFromJSONTyped;
function PostCreateTweetRequestVariablesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'dark_request': value.darkRequest,
        'media': (0, PostCreateTweetRequestVariablesMedia_1.PostCreateTweetRequestVariablesMediaToJSON)(value.media),
        'reply': (0, PostCreateTweetRequestVariablesReply_1.PostCreateTweetRequestVariablesReplyToJSON)(value.reply),
        'semantic_annotation_ids': value.semanticAnnotationIds,
        'tweet_text': value.tweetText,
    };
}
exports.PostCreateTweetRequestVariablesToJSON = PostCreateTweetRequestVariablesToJSON;
//# sourceMappingURL=PostCreateTweetRequestVariables.js.map