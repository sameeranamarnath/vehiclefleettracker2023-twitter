"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MediaVideoInfoToJSON = exports.MediaVideoInfoFromJSONTyped = exports.MediaVideoInfoFromJSON = exports.instanceOfMediaVideoInfo = void 0;
var runtime_1 = require("../runtime");
var MediaVideoInfoVariant_1 = require("./MediaVideoInfoVariant");
/**
 * Check if a given object implements the MediaVideoInfo interface.
 */
function instanceOfMediaVideoInfo(value) {
    var isInstance = true;
    isInstance = isInstance && "aspectRatio" in value;
    isInstance = isInstance && "variants" in value;
    return isInstance;
}
exports.instanceOfMediaVideoInfo = instanceOfMediaVideoInfo;
function MediaVideoInfoFromJSON(json) {
    return MediaVideoInfoFromJSONTyped(json, false);
}
exports.MediaVideoInfoFromJSON = MediaVideoInfoFromJSON;
function MediaVideoInfoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'aspectRatio': json['aspect_ratio'],
        'durationMillis': !(0, runtime_1.exists)(json, 'duration_millis') ? undefined : json['duration_millis'],
        'variants': (json['variants'].map(MediaVideoInfoVariant_1.MediaVideoInfoVariantFromJSON)),
    };
}
exports.MediaVideoInfoFromJSONTyped = MediaVideoInfoFromJSONTyped;
function MediaVideoInfoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'aspect_ratio': value.aspectRatio,
        'duration_millis': value.durationMillis,
        'variants': (value.variants.map(MediaVideoInfoVariant_1.MediaVideoInfoVariantToJSON)),
    };
}
exports.MediaVideoInfoToJSON = MediaVideoInfoToJSON;
//# sourceMappingURL=MediaVideoInfo.js.map