/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AdditionalMediaInfo } from './AdditionalMediaInfo';
import type { ExtMediaAvailability } from './ExtMediaAvailability';
import type { MediaOriginalInfo } from './MediaOriginalInfo';
import type { MediaSizes } from './MediaSizes';
import type { MediaStats } from './MediaStats';
import type { MediaVideoInfo } from './MediaVideoInfo';
/**
 *
 * @export
 * @interface MediaExtended
 */
export interface MediaExtended {
    /**
     *
     * @type {AdditionalMediaInfo}
     * @memberof MediaExtended
     */
    additionalMediaInfo?: AdditionalMediaInfo;
    /**
     *
     * @type {string}
     * @memberof MediaExtended
     */
    displayUrl: string;
    /**
     *
     * @type {string}
     * @memberof MediaExtended
     */
    expandedUrl: string;
    /**
     *
     * @type {ExtMediaAvailability}
     * @memberof MediaExtended
     */
    extMediaAvailability?: ExtMediaAvailability;
    /**
     *
     * @type {object}
     * @memberof MediaExtended
     */
    features?: object;
    /**
     *
     * @type {string}
     * @memberof MediaExtended
     */
    idStr: string;
    /**
     *
     * @type {Array<number>}
     * @memberof MediaExtended
     */
    indices: Array<number>;
    /**
     *
     * @type {MediaStats}
     * @memberof MediaExtended
     */
    mediaStats?: MediaStats;
    /**
     *
     * @type {string}
     * @memberof MediaExtended
     */
    mediaKey: string;
    /**
     *
     * @type {string}
     * @memberof MediaExtended
     */
    mediaUrlHttps: string;
    /**
     *
     * @type {MediaOriginalInfo}
     * @memberof MediaExtended
     */
    originalInfo: MediaOriginalInfo;
    /**
     *
     * @type {MediaSizes}
     * @memberof MediaExtended
     */
    sizes: MediaSizes;
    /**
     *
     * @type {string}
     * @memberof MediaExtended
     */
    type: MediaExtendedTypeEnum;
    /**
     *
     * @type {string}
     * @memberof MediaExtended
     */
    url: string;
    /**
     *
     * @type {MediaVideoInfo}
     * @memberof MediaExtended
     */
    videoInfo?: MediaVideoInfo;
}
/**
 * @export
 */
export declare const MediaExtendedTypeEnum: {
    readonly Photo: "photo";
    readonly Video: "video";
    readonly AnimatedGif: "animated_gif";
};
export type MediaExtendedTypeEnum = typeof MediaExtendedTypeEnum[keyof typeof MediaExtendedTypeEnum];
/**
 * Check if a given object implements the MediaExtended interface.
 */
export declare function instanceOfMediaExtended(value: object): boolean;
export declare function MediaExtendedFromJSON(json: any): MediaExtended;
export declare function MediaExtendedFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaExtended;
export declare function MediaExtendedToJSON(value?: MediaExtended | null): any;
//# sourceMappingURL=MediaExtended.d.ts.map