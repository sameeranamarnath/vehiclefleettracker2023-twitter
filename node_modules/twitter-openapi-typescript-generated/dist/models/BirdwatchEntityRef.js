"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BirdwatchEntityRefToJSON = exports.BirdwatchEntityRefFromJSONTyped = exports.BirdwatchEntityRefFromJSON = exports.instanceOfBirdwatchEntityRef = exports.BirdwatchEntityRefUrlTypeEnum = exports.BirdwatchEntityRefTypeEnum = void 0;
/**
 * @export
 */
exports.BirdwatchEntityRefTypeEnum = {
    TimelineUrl: 'TimelineUrl'
};
/**
 * @export
 */
exports.BirdwatchEntityRefUrlTypeEnum = {
    ExternalUrl: 'ExternalUrl'
};
/**
 * Check if a given object implements the BirdwatchEntityRef interface.
 */
function instanceOfBirdwatchEntityRef(value) {
    var isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "urlType" in value;
    return isInstance;
}
exports.instanceOfBirdwatchEntityRef = instanceOfBirdwatchEntityRef;
function BirdwatchEntityRefFromJSON(json) {
    return BirdwatchEntityRefFromJSONTyped(json, false);
}
exports.BirdwatchEntityRefFromJSON = BirdwatchEntityRefFromJSON;
function BirdwatchEntityRefFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'type': json['type'],
        'url': json['url'],
        'urlType': json['urlType'],
    };
}
exports.BirdwatchEntityRefFromJSONTyped = BirdwatchEntityRefFromJSONTyped;
function BirdwatchEntityRefToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'type': value.type,
        'url': value.url,
        'urlType': value.urlType,
    };
}
exports.BirdwatchEntityRefToJSON = BirdwatchEntityRefToJSON;
//# sourceMappingURL=BirdwatchEntityRef.js.map