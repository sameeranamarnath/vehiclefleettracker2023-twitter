"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EntitiesToJSON = exports.EntitiesFromJSONTyped = exports.EntitiesFromJSON = exports.instanceOfEntities = void 0;
var runtime_1 = require("../runtime");
var Media_1 = require("./Media");
var Url_1 = require("./Url");
/**
 * Check if a given object implements the Entities interface.
 */
function instanceOfEntities(value) {
    var isInstance = true;
    isInstance = isInstance && "hashtags" in value;
    isInstance = isInstance && "symbols" in value;
    isInstance = isInstance && "urls" in value;
    isInstance = isInstance && "userMentions" in value;
    return isInstance;
}
exports.instanceOfEntities = instanceOfEntities;
function EntitiesFromJSON(json) {
    return EntitiesFromJSONTyped(json, false);
}
exports.EntitiesFromJSON = EntitiesFromJSON;
function EntitiesFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hashtags': json['hashtags'],
        'media': !(0, runtime_1.exists)(json, 'media') ? undefined : (json['media'].map(Media_1.MediaFromJSON)),
        'symbols': json['symbols'],
        'urls': (json['urls'].map(Url_1.UrlFromJSON)),
        'userMentions': json['user_mentions'],
    };
}
exports.EntitiesFromJSONTyped = EntitiesFromJSONTyped;
function EntitiesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hashtags': value.hashtags,
        'media': value.media === undefined ? undefined : (value.media.map(Media_1.MediaToJSON)),
        'symbols': value.symbols,
        'urls': (value.urls.map(Url_1.UrlToJSON)),
        'user_mentions': value.userMentions,
    };
}
exports.EntitiesToJSON = EntitiesToJSON;
//# sourceMappingURL=Entities.js.map