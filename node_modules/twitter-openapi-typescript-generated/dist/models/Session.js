"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SessionToJSON = exports.SessionFromJSONTyped = exports.SessionFromJSON = exports.instanceOfSession = exports.SessionSuperFollowsApplicationStatusEnum = void 0;
var runtime_1 = require("../runtime");
var CommunitiesActions_1 = require("./CommunitiesActions");
var OneFactorLoginEligibility_1 = require("./OneFactorLoginEligibility");
var UserFeatures_1 = require("./UserFeatures");
/**
 * @export
 */
exports.SessionSuperFollowsApplicationStatusEnum = {
    NotStarted: 'NotStarted'
};
/**
 * Check if a given object implements the Session interface.
 */
function instanceOfSession(value) {
    var isInstance = true;
    isInstance = isInstance && "communitiesActions" in value;
    isInstance = isInstance && "country" in value;
    isInstance = isInstance && "guestId" in value;
    isInstance = isInstance && "hasCommunityMemberships" in value;
    isInstance = isInstance && "isActiveCreator" in value;
    isInstance = isInstance && "isRestrictedSession" in value;
    isInstance = isInstance && "isSuperFollowSubscriber" in value;
    isInstance = isInstance && "language" in value;
    isInstance = isInstance && "oneFactorLoginEligibility" in value;
    isInstance = isInstance && "superFollowersCount" in value;
    isInstance = isInstance && "superFollowsApplicationStatus" in value;
    isInstance = isInstance && "userFeatures" in value;
    isInstance = isInstance && "userId" in value;
    return isInstance;
}
exports.instanceOfSession = instanceOfSession;
function SessionFromJSON(json) {
    return SessionFromJSONTyped(json, false);
}
exports.SessionFromJSON = SessionFromJSON;
function SessionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'ssoInitTokens': !(0, runtime_1.exists)(json, 'SsoInitTokens') ? undefined : json['SsoInitTokens'],
        'communitiesActions': (0, CommunitiesActions_1.CommunitiesActionsFromJSON)(json['communitiesActions']),
        'country': json['country'],
        'guestId': json['guestId'],
        'hasCommunityMemberships': json['hasCommunityMemberships'],
        'isActiveCreator': json['isActiveCreator'],
        'isRestrictedSession': json['isRestrictedSession'],
        'isSuperFollowSubscriber': json['isSuperFollowSubscriber'],
        'language': json['language'],
        'oneFactorLoginEligibility': (0, OneFactorLoginEligibility_1.OneFactorLoginEligibilityFromJSON)(json['oneFactorLoginEligibility']),
        'superFollowersCount': json['superFollowersCount'],
        'superFollowsApplicationStatus': json['superFollowsApplicationStatus'],
        'userFeatures': (0, UserFeatures_1.UserFeaturesFromJSON)(json['userFeatures']),
        'userId': json['user_id'],
    };
}
exports.SessionFromJSONTyped = SessionFromJSONTyped;
function SessionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'SsoInitTokens': value.ssoInitTokens,
        'communitiesActions': (0, CommunitiesActions_1.CommunitiesActionsToJSON)(value.communitiesActions),
        'country': value.country,
        'guestId': value.guestId,
        'hasCommunityMemberships': value.hasCommunityMemberships,
        'isActiveCreator': value.isActiveCreator,
        'isRestrictedSession': value.isRestrictedSession,
        'isSuperFollowSubscriber': value.isSuperFollowSubscriber,
        'language': value.language,
        'oneFactorLoginEligibility': (0, OneFactorLoginEligibility_1.OneFactorLoginEligibilityToJSON)(value.oneFactorLoginEligibility),
        'superFollowersCount': value.superFollowersCount,
        'superFollowsApplicationStatus': value.superFollowsApplicationStatus,
        'userFeatures': (0, UserFeatures_1.UserFeaturesToJSON)(value.userFeatures),
        'user_id': value.userId,
    };
}
exports.SessionToJSON = SessionToJSON;
//# sourceMappingURL=Session.js.map